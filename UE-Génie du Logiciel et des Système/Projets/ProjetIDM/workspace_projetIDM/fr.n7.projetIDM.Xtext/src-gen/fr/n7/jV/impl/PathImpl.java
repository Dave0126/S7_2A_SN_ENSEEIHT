/**
 * generated by Xtext 2.23.0
 */
package fr.n7.jV.impl;

import fr.n7.jV.BOOLEAN;
import fr.n7.jV.Condition;
import fr.n7.jV.Description;
import fr.n7.jV.JVPackage;
import fr.n7.jV.Path;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Path</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.jV.impl.PathImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link fr.n7.jV.impl.PathImpl#getOpen <em>Open</em>}</li>
 *   <li>{@link fr.n7.jV.impl.PathImpl#getVisible <em>Visible</em>}</li>
 *   <li>{@link fr.n7.jV.impl.PathImpl#getMandatory <em>Mandatory</em>}</li>
 *   <li>{@link fr.n7.jV.impl.PathImpl#getConsumedID <em>Consumed ID</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PathImpl extends GameElementImpl implements Path
{
  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected Description description;

  /**
   * The cached value of the '{@link #getOpen() <em>Open</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpen()
   * @generated
   * @ordered
   */
  protected EList<Condition> open;

  /**
   * The cached value of the '{@link #getVisible() <em>Visible</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisible()
   * @generated
   * @ordered
   */
  protected EList<Condition> visible;

  /**
   * The default value of the '{@link #getMandatory() <em>Mandatory</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMandatory()
   * @generated
   * @ordered
   */
  protected static final BOOLEAN MANDATORY_EDEFAULT = BOOLEAN.TRUE;

  /**
   * The cached value of the '{@link #getMandatory() <em>Mandatory</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMandatory()
   * @generated
   * @ordered
   */
  protected BOOLEAN mandatory = MANDATORY_EDEFAULT;

  /**
   * The cached value of the '{@link #getConsumedID() <em>Consumed ID</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConsumedID()
   * @generated
   * @ordered
   */
  protected EList<String> consumedID;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PathImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JVPackage.Literals.PATH;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Description getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDescription(Description newDescription, NotificationChain msgs)
  {
    Description oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JVPackage.PATH__DESCRIPTION, oldDescription, newDescription);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(Description newDescription)
  {
    if (newDescription != description)
    {
      NotificationChain msgs = null;
      if (description != null)
        msgs = ((InternalEObject)description).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JVPackage.PATH__DESCRIPTION, null, msgs);
      if (newDescription != null)
        msgs = ((InternalEObject)newDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JVPackage.PATH__DESCRIPTION, null, msgs);
      msgs = basicSetDescription(newDescription, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JVPackage.PATH__DESCRIPTION, newDescription, newDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Condition> getOpen()
  {
    if (open == null)
    {
      open = new EObjectContainmentEList<Condition>(Condition.class, this, JVPackage.PATH__OPEN);
    }
    return open;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Condition> getVisible()
  {
    if (visible == null)
    {
      visible = new EObjectContainmentEList<Condition>(Condition.class, this, JVPackage.PATH__VISIBLE);
    }
    return visible;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BOOLEAN getMandatory()
  {
    return mandatory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMandatory(BOOLEAN newMandatory)
  {
    BOOLEAN oldMandatory = mandatory;
    mandatory = newMandatory == null ? MANDATORY_EDEFAULT : newMandatory;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JVPackage.PATH__MANDATORY, oldMandatory, mandatory));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getConsumedID()
  {
    if (consumedID == null)
    {
      consumedID = new EDataTypeEList<String>(String.class, this, JVPackage.PATH__CONSUMED_ID);
    }
    return consumedID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JVPackage.PATH__DESCRIPTION:
        return basicSetDescription(null, msgs);
      case JVPackage.PATH__OPEN:
        return ((InternalEList<?>)getOpen()).basicRemove(otherEnd, msgs);
      case JVPackage.PATH__VISIBLE:
        return ((InternalEList<?>)getVisible()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JVPackage.PATH__DESCRIPTION:
        return getDescription();
      case JVPackage.PATH__OPEN:
        return getOpen();
      case JVPackage.PATH__VISIBLE:
        return getVisible();
      case JVPackage.PATH__MANDATORY:
        return getMandatory();
      case JVPackage.PATH__CONSUMED_ID:
        return getConsumedID();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JVPackage.PATH__DESCRIPTION:
        setDescription((Description)newValue);
        return;
      case JVPackage.PATH__OPEN:
        getOpen().clear();
        getOpen().addAll((Collection<? extends Condition>)newValue);
        return;
      case JVPackage.PATH__VISIBLE:
        getVisible().clear();
        getVisible().addAll((Collection<? extends Condition>)newValue);
        return;
      case JVPackage.PATH__MANDATORY:
        setMandatory((BOOLEAN)newValue);
        return;
      case JVPackage.PATH__CONSUMED_ID:
        getConsumedID().clear();
        getConsumedID().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JVPackage.PATH__DESCRIPTION:
        setDescription((Description)null);
        return;
      case JVPackage.PATH__OPEN:
        getOpen().clear();
        return;
      case JVPackage.PATH__VISIBLE:
        getVisible().clear();
        return;
      case JVPackage.PATH__MANDATORY:
        setMandatory(MANDATORY_EDEFAULT);
        return;
      case JVPackage.PATH__CONSUMED_ID:
        getConsumedID().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JVPackage.PATH__DESCRIPTION:
        return description != null;
      case JVPackage.PATH__OPEN:
        return open != null && !open.isEmpty();
      case JVPackage.PATH__VISIBLE:
        return visible != null && !visible.isEmpty();
      case JVPackage.PATH__MANDATORY:
        return mandatory != MANDATORY_EDEFAULT;
      case JVPackage.PATH__CONSUMED_ID:
        return consumedID != null && !consumedID.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (mandatory: ");
    result.append(mandatory);
    result.append(", consumedID: ");
    result.append(consumedID);
    result.append(')');
    return result.toString();
  }

} //PathImpl
