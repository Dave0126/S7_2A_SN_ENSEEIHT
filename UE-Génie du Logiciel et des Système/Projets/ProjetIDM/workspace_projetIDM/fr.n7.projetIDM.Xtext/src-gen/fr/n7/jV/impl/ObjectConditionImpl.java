/**
 * generated by Xtext 2.23.0
 */
package fr.n7.jV.impl;

import fr.n7.jV.JVPackage;
import fr.n7.jV.ObjectCondition;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Object Condition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.jV.impl.ObjectConditionImpl#getObjectRequiredID <em>Object Required ID</em>}</li>
 *   <li>{@link fr.n7.jV.impl.ObjectConditionImpl#getAmount <em>Amount</em>}</li>
 *   <li>{@link fr.n7.jV.impl.ObjectConditionImpl#getMinAmount <em>Min Amount</em>}</li>
 *   <li>{@link fr.n7.jV.impl.ObjectConditionImpl#getMaxAmount <em>Max Amount</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ObjectConditionImpl extends ConditionImpl implements ObjectCondition
{
  /**
   * The default value of the '{@link #getObjectRequiredID() <em>Object Required ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectRequiredID()
   * @generated
   * @ordered
   */
  protected static final String OBJECT_REQUIRED_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getObjectRequiredID() <em>Object Required ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectRequiredID()
   * @generated
   * @ordered
   */
  protected String objectRequiredID = OBJECT_REQUIRED_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getAmount() <em>Amount</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAmount()
   * @generated
   * @ordered
   */
  protected static final int AMOUNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getAmount() <em>Amount</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAmount()
   * @generated
   * @ordered
   */
  protected int amount = AMOUNT_EDEFAULT;

  /**
   * The default value of the '{@link #getMinAmount() <em>Min Amount</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinAmount()
   * @generated
   * @ordered
   */
  protected static final int MIN_AMOUNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinAmount() <em>Min Amount</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinAmount()
   * @generated
   * @ordered
   */
  protected int minAmount = MIN_AMOUNT_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxAmount() <em>Max Amount</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxAmount()
   * @generated
   * @ordered
   */
  protected static final int MAX_AMOUNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxAmount() <em>Max Amount</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxAmount()
   * @generated
   * @ordered
   */
  protected int maxAmount = MAX_AMOUNT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ObjectConditionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JVPackage.Literals.OBJECT_CONDITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getObjectRequiredID()
  {
    return objectRequiredID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObjectRequiredID(String newObjectRequiredID)
  {
    String oldObjectRequiredID = objectRequiredID;
    objectRequiredID = newObjectRequiredID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JVPackage.OBJECT_CONDITION__OBJECT_REQUIRED_ID, oldObjectRequiredID, objectRequiredID));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getAmount()
  {
    return amount;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAmount(int newAmount)
  {
    int oldAmount = amount;
    amount = newAmount;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JVPackage.OBJECT_CONDITION__AMOUNT, oldAmount, amount));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMinAmount()
  {
    return minAmount;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinAmount(int newMinAmount)
  {
    int oldMinAmount = minAmount;
    minAmount = newMinAmount;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JVPackage.OBJECT_CONDITION__MIN_AMOUNT, oldMinAmount, minAmount));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxAmount()
  {
    return maxAmount;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxAmount(int newMaxAmount)
  {
    int oldMaxAmount = maxAmount;
    maxAmount = newMaxAmount;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JVPackage.OBJECT_CONDITION__MAX_AMOUNT, oldMaxAmount, maxAmount));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JVPackage.OBJECT_CONDITION__OBJECT_REQUIRED_ID:
        return getObjectRequiredID();
      case JVPackage.OBJECT_CONDITION__AMOUNT:
        return getAmount();
      case JVPackage.OBJECT_CONDITION__MIN_AMOUNT:
        return getMinAmount();
      case JVPackage.OBJECT_CONDITION__MAX_AMOUNT:
        return getMaxAmount();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JVPackage.OBJECT_CONDITION__OBJECT_REQUIRED_ID:
        setObjectRequiredID((String)newValue);
        return;
      case JVPackage.OBJECT_CONDITION__AMOUNT:
        setAmount((Integer)newValue);
        return;
      case JVPackage.OBJECT_CONDITION__MIN_AMOUNT:
        setMinAmount((Integer)newValue);
        return;
      case JVPackage.OBJECT_CONDITION__MAX_AMOUNT:
        setMaxAmount((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JVPackage.OBJECT_CONDITION__OBJECT_REQUIRED_ID:
        setObjectRequiredID(OBJECT_REQUIRED_ID_EDEFAULT);
        return;
      case JVPackage.OBJECT_CONDITION__AMOUNT:
        setAmount(AMOUNT_EDEFAULT);
        return;
      case JVPackage.OBJECT_CONDITION__MIN_AMOUNT:
        setMinAmount(MIN_AMOUNT_EDEFAULT);
        return;
      case JVPackage.OBJECT_CONDITION__MAX_AMOUNT:
        setMaxAmount(MAX_AMOUNT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JVPackage.OBJECT_CONDITION__OBJECT_REQUIRED_ID:
        return OBJECT_REQUIRED_ID_EDEFAULT == null ? objectRequiredID != null : !OBJECT_REQUIRED_ID_EDEFAULT.equals(objectRequiredID);
      case JVPackage.OBJECT_CONDITION__AMOUNT:
        return amount != AMOUNT_EDEFAULT;
      case JVPackage.OBJECT_CONDITION__MIN_AMOUNT:
        return minAmount != MIN_AMOUNT_EDEFAULT;
      case JVPackage.OBJECT_CONDITION__MAX_AMOUNT:
        return maxAmount != MAX_AMOUNT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (objectRequiredID: ");
    result.append(objectRequiredID);
    result.append(", amount: ");
    result.append(amount);
    result.append(", minAmount: ");
    result.append(minAmount);
    result.append(", maxAmount: ");
    result.append(maxAmount);
    result.append(')');
    return result.toString();
  }

} //ObjectConditionImpl
