/*
 * generated by Xtext 2.23.0
 */
package fr.n7.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import fr.n7.ide.contentassist.antlr.internal.InternalJVParser;
import fr.n7.services.JVGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class JVParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(JVGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, JVGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getGameElementAccess().getAlternatives(), "rule__GameElement__Alternatives");
			builder.put(grammarAccess.getPrizeAccess().getAlternatives(), "rule__Prize__Alternatives");
			builder.put(grammarAccess.getConditionAccess().getAlternatives(), "rule__Condition__Alternatives");
			builder.put(grammarAccess.getBOOLEANAccess().getAlternatives(), "rule__BOOLEAN__Alternatives");
			builder.put(grammarAccess.getGameAccess().getGroup(), "rule__Game__Group__0");
			builder.put(grammarAccess.getDescriptionAccess().getGroup(), "rule__Description__Group__0");
			builder.put(grammarAccess.getOptionalTextAccess().getGroup(), "rule__OptionalText__Group__0");
			builder.put(grammarAccess.getGameElementAccess().getGroup_1(), "rule__GameElement__Group_1__0");
			builder.put(grammarAccess.getPlacesAccess().getGroup(), "rule__Places__Group__0");
			builder.put(grammarAccess.getPlacesAccess().getGroup_7(), "rule__Places__Group_7__0");
			builder.put(grammarAccess.getPlacesAccess().getGroup_8(), "rule__Places__Group_8__0");
			builder.put(grammarAccess.getPrizeAccess().getGroup_1(), "rule__Prize__Group_1__0");
			builder.put(grammarAccess.getPrizeAccess().getGroup_1_1(), "rule__Prize__Group_1_1__0");
			builder.put(grammarAccess.getPrizeAccess().getGroup_1_2(), "rule__Prize__Group_1_2__0");
			builder.put(grammarAccess.getObjectConditionAccess().getGroup(), "rule__ObjectCondition__Group__0");
			builder.put(grammarAccess.getObjectConditionAccess().getGroup_2(), "rule__ObjectCondition__Group_2__0");
			builder.put(grammarAccess.getObjectConditionAccess().getGroup_3(), "rule__ObjectCondition__Group_3__0");
			builder.put(grammarAccess.getObjectConditionAccess().getGroup_4(), "rule__ObjectCondition__Group_4__0");
			builder.put(grammarAccess.getKnowledgeConditionAccess().getGroup(), "rule__KnowledgeCondition__Group__0");
			builder.put(grammarAccess.getPersonAccess().getGroup(), "rule__Person__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup_1(), "rule__Action__Group_1__0");
			builder.put(grammarAccess.getActionAccess().getGroup_2(), "rule__Action__Group_2__0");
			builder.put(grammarAccess.getActionAccess().getGroup_3(), "rule__Action__Group_3__0");
			builder.put(grammarAccess.getActionAccess().getGroup_4(), "rule__Action__Group_4__0");
			builder.put(grammarAccess.getActionAccess().getGroup_5(), "rule__Action__Group_5__0");
			builder.put(grammarAccess.getKnowledgeAccess().getGroup(), "rule__Knowledge__Group__0");
			builder.put(grammarAccess.getPathAccess().getGroup(), "rule__Path__Group__0");
			builder.put(grammarAccess.getPathAccess().getGroup_2(), "rule__Path__Group_2__0");
			builder.put(grammarAccess.getPathAccess().getGroup_3(), "rule__Path__Group_3__0");
			builder.put(grammarAccess.getPathAccess().getGroup_6(), "rule__Path__Group_6__0");
			builder.put(grammarAccess.getPathAccess().getGroup_7(), "rule__Path__Group_7__0");
			builder.put(grammarAccess.getInventoryObjectAccess().getGroup(), "rule__InventoryObject__Group__0");
			builder.put(grammarAccess.getInventoryObjectAccess().getGroup_2(), "rule__InventoryObject__Group_2__0");
			builder.put(grammarAccess.getInventoryObjectAccess().getGroup_3(), "rule__InventoryObject__Group_3__0");
			builder.put(grammarAccess.getGameAccess().getNameAssignment_1(), "rule__Game__NameAssignment_1");
			builder.put(grammarAccess.getGameAccess().getInventorySizeAssignment_4(), "rule__Game__InventorySizeAssignment_4");
			builder.put(grammarAccess.getGameAccess().getGameElementsAssignment_5(), "rule__Game__GameElementsAssignment_5");
			builder.put(grammarAccess.getGameAccess().getObjectsAssignment_6(), "rule__Game__ObjectsAssignment_6");
			builder.put(grammarAccess.getDescriptionAccess().getTextAssignment_1(), "rule__Description__TextAssignment_1");
			builder.put(grammarAccess.getDescriptionAccess().getOptionalTextAssignment_2(), "rule__Description__OptionalTextAssignment_2");
			builder.put(grammarAccess.getOptionalTextAccess().getConditionAssignment_2(), "rule__OptionalText__ConditionAssignment_2");
			builder.put(grammarAccess.getOptionalTextAccess().getTextAssignment_3(), "rule__OptionalText__TextAssignment_3");
			builder.put(grammarAccess.getGameElementAccess().getDescriptionAssignment_1_1(), "rule__GameElement__DescriptionAssignment_1_1");
			builder.put(grammarAccess.getPlacesAccess().getIdAssignment_1(), "rule__Places__IdAssignment_1");
			builder.put(grammarAccess.getPlacesAccess().getStartAssignment_3(), "rule__Places__StartAssignment_3");
			builder.put(grammarAccess.getPlacesAccess().getFinishAssignment_5(), "rule__Places__FinishAssignment_5");
			builder.put(grammarAccess.getPlacesAccess().getPersonsAssignment_6(), "rule__Places__PersonsAssignment_6");
			builder.put(grammarAccess.getPlacesAccess().getPrizesIDAssignment_7_1(), "rule__Places__PrizesIDAssignment_7_1");
			builder.put(grammarAccess.getPlacesAccess().getPathsIDAssignment_8_1(), "rule__Places__PathsIDAssignment_8_1");
			builder.put(grammarAccess.getPrizeAccess().getVisibleAssignment_1_1_1(), "rule__Prize__VisibleAssignment_1_1_1");
			builder.put(grammarAccess.getPrizeAccess().getConditionAssignment_1_2_1(), "rule__Prize__ConditionAssignment_1_2_1");
			builder.put(grammarAccess.getObjectConditionAccess().getObjectRequiredIDAssignment_1(), "rule__ObjectCondition__ObjectRequiredIDAssignment_1");
			builder.put(grammarAccess.getObjectConditionAccess().getAmountAssignment_2_1(), "rule__ObjectCondition__AmountAssignment_2_1");
			builder.put(grammarAccess.getObjectConditionAccess().getMinAmountAssignment_3_1(), "rule__ObjectCondition__MinAmountAssignment_3_1");
			builder.put(grammarAccess.getObjectConditionAccess().getMaxAmountAssignment_4_1(), "rule__ObjectCondition__MaxAmountAssignment_4_1");
			builder.put(grammarAccess.getKnowledgeConditionAccess().getKnowledgeRequiredIDAssignment_1(), "rule__KnowledgeCondition__KnowledgeRequiredIDAssignment_1");
			builder.put(grammarAccess.getPersonAccess().getIdAssignment_1(), "rule__Person__IdAssignment_1");
			builder.put(grammarAccess.getPersonAccess().getVisibleAssignment_3(), "rule__Person__VisibleAssignment_3");
			builder.put(grammarAccess.getPersonAccess().getMandatoryAssignment_5(), "rule__Person__MandatoryAssignment_5");
			builder.put(grammarAccess.getPersonAccess().getActionsAssignment_6(), "rule__Person__ActionsAssignment_6");
			builder.put(grammarAccess.getActionAccess().getDisplayConditionAssignment_1_1(), "rule__Action__DisplayConditionAssignment_1_1");
			builder.put(grammarAccess.getActionAccess().getEndConditionAssignment_2_1(), "rule__Action__EndConditionAssignment_2_1");
			builder.put(grammarAccess.getActionAccess().getConditionAssignment_3_1(), "rule__Action__ConditionAssignment_3_1");
			builder.put(grammarAccess.getActionAccess().getPrizesIDAssignment_4_1(), "rule__Action__PrizesIDAssignment_4_1");
			builder.put(grammarAccess.getActionAccess().getConsumedIDAssignment_5_1(), "rule__Action__ConsumedIDAssignment_5_1");
			builder.put(grammarAccess.getKnowledgeAccess().getIdAssignment_1(), "rule__Knowledge__IdAssignment_1");
			builder.put(grammarAccess.getKnowledgeAccess().getDescriptionAssignment_2(), "rule__Knowledge__DescriptionAssignment_2");
			builder.put(grammarAccess.getPathAccess().getIdAssignment_1(), "rule__Path__IdAssignment_1");
			builder.put(grammarAccess.getPathAccess().getOpenAssignment_2_1(), "rule__Path__OpenAssignment_2_1");
			builder.put(grammarAccess.getPathAccess().getVisibleAssignment_3_1(), "rule__Path__VisibleAssignment_3_1");
			builder.put(grammarAccess.getPathAccess().getMandatoryAssignment_5(), "rule__Path__MandatoryAssignment_5");
			builder.put(grammarAccess.getPathAccess().getPrizesIDAssignment_6_1(), "rule__Path__PrizesIDAssignment_6_1");
			builder.put(grammarAccess.getPathAccess().getConsumedIDAssignment_7_1(), "rule__Path__ConsumedIDAssignment_7_1");
			builder.put(grammarAccess.getInventoryObjectAccess().getIdAssignment_1(), "rule__InventoryObject__IdAssignment_1");
			builder.put(grammarAccess.getInventoryObjectAccess().getTransformationConditionAssignment_2_1(), "rule__InventoryObject__TransformationConditionAssignment_2_1");
			builder.put(grammarAccess.getInventoryObjectAccess().getObjectAfterTransformationIDAssignment_3_1(), "rule__InventoryObject__ObjectAfterTransformationIDAssignment_3_1");
			builder.put(grammarAccess.getInventoryObjectAccess().getSizeAssignment_5(), "rule__InventoryObject__SizeAssignment_5");
			builder.put(grammarAccess.getInventoryObjectAccess().getDescriptionAssignment_6(), "rule__InventoryObject__DescriptionAssignment_6");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private JVGrammarAccess grammarAccess;

	@Override
	protected InternalJVParser createParser() {
		InternalJVParser result = new InternalJVParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public JVGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(JVGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
